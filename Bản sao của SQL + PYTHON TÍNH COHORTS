{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1YXjJsIwxhZ1Gzl2HDDmYtVfW7BA6A3ai","timestamp":1720967192244}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install duckdb"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4h6XTe8VQLU5","executionInfo":{"status":"ok","timestamp":1719742731785,"user_tz":-420,"elapsed":17806,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"6adb5f47-be18-44e0-9de9-e5aa483d55c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: duckdb in /usr/local/lib/python3.10/dist-packages (0.10.3)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZEcSndW8KJy0"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import datetime as dt\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from matplotlib.ticker import PercentFormatter"]},{"cell_type":"code","source":["import duckdb"],"metadata":{"id":"BZ_xgjoeQPQw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('US  E-commerce records 2020 (1).csv', encoding='latin1')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"3W5YlHhGL-PK","executionInfo":{"status":"ok","timestamp":1719738352780,"user_tz":-420,"elapsed":13,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"5434801b-dcf3-4c18-8767-09d32bdb6e7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Order Date  Row ID        Order ID       Ship Mode Customer ID      Segment  \\\n","0   01-01-20     849  CA-2017-107503  Standard Class    GA-14725     Consumer   \n","1   01-01-20    4010  CA-2017-144463  Standard Class    SC-20725     Consumer   \n","2   01-01-20    6683  CA-2017-154466     First Class    DP-13390  Home Office   \n","3   01-01-20    8070  CA-2017-151750  Standard Class    JM-15250     Consumer   \n","4   01-01-20    8071  CA-2017-151750  Standard Class    JM-15250     Consumer   \n","\n","         Country         City       State  Postal Code   Region  \\\n","0  United States       Lorain        Ohio        44052     East   \n","1  United States  Los Angeles  California        90036     West   \n","2  United States     Franklin   Wisconsin        53132  Central   \n","3  United States   Huntsville       Texas        77340  Central   \n","4  United States   Huntsville       Texas        77340  Central   \n","\n","        Product ID         Category Sub-Category  \\\n","0  FUR-FU-10003878        Furniture  Furnishings   \n","1  FUR-FU-10001215        Furniture  Furnishings   \n","2  OFF-BI-10002012  Office Supplies      Binders   \n","3  OFF-ST-10002743  Office Supplies      Storage   \n","4  FUR-FU-10002116        Furniture  Furnishings   \n","\n","                                        Product Name    Sales  Quantity  \\\n","0                 Linden 10\" Round Wall Clock, Black   48.896         4   \n","1  Howard Miller 11-1/2\" Diameter Brentwood Wall ...  474.430        11   \n","2            Wilson Jones Easy Flow II Sheet Lifters    3.600         2   \n","3                      SAFCO Boltless Steel Shelving  454.560         5   \n","4  Tenex Carpeted, Granite-Look or Clear Contempo...  141.420         5   \n","\n","   Discount    Profit  \n","0       0.2    8.5568  \n","1       0.0  199.2606  \n","2       0.0    1.7280  \n","3       0.2 -107.9580  \n","4       0.6 -187.3815  "],"text/html":["\n","  <div id=\"df-578a7e65-7a62-4124-92fc-09d87e49aa64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Order Date</th>\n","      <th>Row ID</th>\n","      <th>Order ID</th>\n","      <th>Ship Mode</th>\n","      <th>Customer ID</th>\n","      <th>Segment</th>\n","      <th>Country</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Region</th>\n","      <th>Product ID</th>\n","      <th>Category</th>\n","      <th>Sub-Category</th>\n","      <th>Product Name</th>\n","      <th>Sales</th>\n","      <th>Quantity</th>\n","      <th>Discount</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01-01-20</td>\n","      <td>849</td>\n","      <td>CA-2017-107503</td>\n","      <td>Standard Class</td>\n","      <td>GA-14725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Lorain</td>\n","      <td>Ohio</td>\n","      <td>44052</td>\n","      <td>East</td>\n","      <td>FUR-FU-10003878</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Linden 10\" Round Wall Clock, Black</td>\n","      <td>48.896</td>\n","      <td>4</td>\n","      <td>0.2</td>\n","      <td>8.5568</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01-01-20</td>\n","      <td>4010</td>\n","      <td>CA-2017-144463</td>\n","      <td>Standard Class</td>\n","      <td>SC-20725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Los Angeles</td>\n","      <td>California</td>\n","      <td>90036</td>\n","      <td>West</td>\n","      <td>FUR-FU-10001215</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Howard Miller 11-1/2\" Diameter Brentwood Wall ...</td>\n","      <td>474.430</td>\n","      <td>11</td>\n","      <td>0.0</td>\n","      <td>199.2606</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-01-20</td>\n","      <td>6683</td>\n","      <td>CA-2017-154466</td>\n","      <td>First Class</td>\n","      <td>DP-13390</td>\n","      <td>Home Office</td>\n","      <td>United States</td>\n","      <td>Franklin</td>\n","      <td>Wisconsin</td>\n","      <td>53132</td>\n","      <td>Central</td>\n","      <td>OFF-BI-10002012</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Wilson Jones Easy Flow II Sheet Lifters</td>\n","      <td>3.600</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>1.7280</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01-01-20</td>\n","      <td>8070</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>OFF-ST-10002743</td>\n","      <td>Office Supplies</td>\n","      <td>Storage</td>\n","      <td>SAFCO Boltless Steel Shelving</td>\n","      <td>454.560</td>\n","      <td>5</td>\n","      <td>0.2</td>\n","      <td>-107.9580</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01-01-20</td>\n","      <td>8071</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>FUR-FU-10002116</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Tenex Carpeted, Granite-Look or Clear Contempo...</td>\n","      <td>141.420</td>\n","      <td>5</td>\n","      <td>0.6</td>\n","      <td>-187.3815</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-578a7e65-7a62-4124-92fc-09d87e49aa64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-578a7e65-7a62-4124-92fc-09d87e49aa64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-578a7e65-7a62-4124-92fc-09d87e49aa64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-66c8bfbf-a34a-4ef0-9cc4-1ce606b34d5c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66c8bfbf-a34a-4ef0-9cc4-1ce606b34d5c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-66c8bfbf-a34a-4ef0-9cc4-1ce606b34d5c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3312,\n  \"fields\": [\n    {\n      \"column\": \"Order Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 322,\n        \"samples\": [\n          \"25-07-20\",\n          \"09-06-20\",\n          \"21-08-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Row ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2817,\n        \"min\": 13,\n        \"max\": 9994,\n        \"num_unique_values\": 3312,\n        \"samples\": [\n          9863,\n          5456,\n          8302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Order ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1687,\n        \"samples\": [\n          \"CA-2017-120222\",\n          \"CA-2017-122770\",\n          \"CA-2017-120719\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ship Mode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"First Class\",\n          \"Same Day\",\n          \"Standard Class\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 693,\n        \"samples\": [\n          \"FO-14305\",\n          \"NP-18325\",\n          \"JE-15745\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Consumer\",\n          \"Home Office\",\n          \"Corporate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 350,\n        \"samples\": [\n          \"Greensboro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 47,\n        \"samples\": [\n          \"Minnesota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31980,\n        \"min\": 1841,\n        \"max\": 99301,\n        \"num_unique_values\": 437,\n        \"samples\": [\n          21740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1525,\n        \"samples\": [\n          \"OFF-PA-10000380\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Furniture\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Furnishings\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1511,\n        \"samples\": [\n          \"Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\\\"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 585.2575312625233,\n        \"min\": 0.444,\n        \"max\": 13999.96,\n        \"num_unique_values\": 2552,\n        \"samples\": [\n          34.384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 14,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20742912132577707,\n        \"min\": 0.0,\n        \"max\": 0.8,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 241.86434160309102,\n        \"min\": -3839.9904,\n        \"max\": 6719.9808,\n        \"num_unique_values\": 2881,\n        \"samples\": [\n          149.8956\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cZJqENtIVgKG","executionInfo":{"status":"ok","timestamp":1719064854038,"user_tz":-420,"elapsed":585,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"7569d3fb-6638-4cd4-eec4-8c0293fe35e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3312 entries, 0 to 3311\n","Data columns (total 19 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   Order Date    3312 non-null   object \n"," 1   Row ID        3312 non-null   int64  \n"," 2   Order ID      3312 non-null   object \n"," 3   Ship Mode     3312 non-null   object \n"," 4   Customer ID   3312 non-null   object \n"," 5   Segment       3312 non-null   object \n"," 6   Country       3312 non-null   object \n"," 7   City          3312 non-null   object \n"," 8   State         3312 non-null   object \n"," 9   Postal Code   3312 non-null   int64  \n"," 10  Region        3312 non-null   object \n"," 11  Product ID    3312 non-null   object \n"," 12  Category      3312 non-null   object \n"," 13  Sub-Category  3312 non-null   object \n"," 14  Product Name  3312 non-null   object \n"," 15  Sales         3312 non-null   float64\n"," 16  Quantity      3312 non-null   int64  \n"," 17  Discount      3312 non-null   float64\n"," 18  Profit        3312 non-null   float64\n","dtypes: float64(3), int64(3), object(13)\n","memory usage: 491.8+ KB\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"VOH_ohruZWuL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"RP_XNyFiVwA2","executionInfo":{"status":"ok","timestamp":1707965007039,"user_tz":-420,"elapsed":567,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"0e716e86-90ca-4414-84dd-5602aa56b4c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Row ID   Postal Code         Sales     Quantity     Discount  \\\n","count  3312.000000   3312.000000   3312.000000  3312.000000  3312.000000   \n","mean   5087.107488  56186.515097    221.381418     3.766908     0.156467   \n","std    2817.482266  31980.375516    585.257531     2.221776     0.207429   \n","min      13.000000   1841.000000      0.444000     1.000000     0.000000   \n","25%    2655.750000  27978.750000     17.018000     2.000000     0.000000   \n","50%    5183.500000  60472.500000     53.810000     3.000000     0.200000   \n","75%    7498.250000  90032.000000    205.105700     5.000000     0.200000   \n","max    9994.000000  99301.000000  13999.960000    14.000000     0.800000   \n","\n","            Profit  \n","count  3312.000000  \n","mean     28.212340  \n","std     241.864342  \n","min   -3839.990400  \n","25%       1.763200  \n","50%       8.296800  \n","75%      28.315125  \n","max    6719.980800  "],"text/html":["\n","  <div id=\"df-1c112454-a164-4b8a-b9d5-b437d15a7136\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Row ID</th>\n","      <th>Postal Code</th>\n","      <th>Sales</th>\n","      <th>Quantity</th>\n","      <th>Discount</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3312.000000</td>\n","      <td>3312.000000</td>\n","      <td>3312.000000</td>\n","      <td>3312.000000</td>\n","      <td>3312.000000</td>\n","      <td>3312.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5087.107488</td>\n","      <td>56186.515097</td>\n","      <td>221.381418</td>\n","      <td>3.766908</td>\n","      <td>0.156467</td>\n","      <td>28.212340</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2817.482266</td>\n","      <td>31980.375516</td>\n","      <td>585.257531</td>\n","      <td>2.221776</td>\n","      <td>0.207429</td>\n","      <td>241.864342</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>13.000000</td>\n","      <td>1841.000000</td>\n","      <td>0.444000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>-3839.990400</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2655.750000</td>\n","      <td>27978.750000</td>\n","      <td>17.018000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.763200</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5183.500000</td>\n","      <td>60472.500000</td>\n","      <td>53.810000</td>\n","      <td>3.000000</td>\n","      <td>0.200000</td>\n","      <td>8.296800</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7498.250000</td>\n","      <td>90032.000000</td>\n","      <td>205.105700</td>\n","      <td>5.000000</td>\n","      <td>0.200000</td>\n","      <td>28.315125</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9994.000000</td>\n","      <td>99301.000000</td>\n","      <td>13999.960000</td>\n","      <td>14.000000</td>\n","      <td>0.800000</td>\n","      <td>6719.980800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c112454-a164-4b8a-b9d5-b437d15a7136')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c112454-a164-4b8a-b9d5-b437d15a7136 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c112454-a164-4b8a-b9d5-b437d15a7136');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06e801ad-7752-418f-b380-25f484c01ccb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06e801ad-7752-418f-b380-25f484c01ccb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06e801ad-7752-418f-b380-25f484c01ccb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_ecom\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Row ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3110.413173925528,\n        \"min\": 13.0,\n        \"max\": 9994.0,\n        \"samples\": [\n          5087.107487922705,\n          5183.5,\n          3312.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36616.59549046301,\n        \"min\": 1841.0,\n        \"max\": 99301.0,\n        \"samples\": [\n          56186.51509661836,\n          60472.5,\n          3312.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4856.631961204174,\n        \"min\": 0.444,\n        \"max\": 13999.96,\n        \"samples\": [\n          221.38141763285026,\n          53.81,\n          3312.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1169.410807564998,\n        \"min\": 1.0,\n        \"max\": 3312.0,\n        \"samples\": [\n          3.7669082125603865,\n          3.0,\n          3312.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1170.8898676693289,\n        \"min\": 0.0,\n        \"max\": 3312.0,\n        \"samples\": [\n          3312.0,\n          0.15646739130434784,\n          0.8\n        ],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3062.473594112408,\n        \"min\": -3839.9904,\n        \"max\": 6719.9808,\n        \"samples\": [\n          28.212339855072464,\n          8.296800000000001,\n          3312.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QernGuHAV08t","executionInfo":{"status":"ok","timestamp":1707965011428,"user_tz":-420,"elapsed":2,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"3d9b4049-3bb4-4ec4-9cee-07174058f233"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Order Date      0\n","Row ID          0\n","Order ID        0\n","Ship Mode       0\n","Customer ID     0\n","Segment         0\n","Country         0\n","City            0\n","State           0\n","Postal Code     0\n","Region          0\n","Product ID      0\n","Category        0\n","Sub-Category    0\n","Product Name    0\n","Sales           0\n","Quantity        0\n","Discount        0\n","Profit          0\n","dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df=df.drop_duplicates()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":666},"id":"bKxDFW5mWLtq","executionInfo":{"status":"ok","timestamp":1719720562080,"user_tz":-420,"elapsed":428,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"056886dd-1dc9-4927-b674-4a93229d83f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Order Date  Row ID        Order ID       Ship Mode Customer ID  \\\n","0      01-01-20     849  CA-2017-107503  Standard Class    GA-14725   \n","1      01-01-20    4010  CA-2017-144463  Standard Class    SC-20725   \n","2      01-01-20    6683  CA-2017-154466     First Class    DP-13390   \n","3      01-01-20    8070  CA-2017-151750  Standard Class    JM-15250   \n","4      01-01-20    8071  CA-2017-151750  Standard Class    JM-15250   \n","...         ...     ...             ...             ...         ...   \n","3307   30-12-20     908  CA-2017-143259  Standard Class    PO-18865   \n","3308   30-12-20     909  CA-2017-143259  Standard Class    PO-18865   \n","3309   30-12-20    1297  CA-2017-115427  Standard Class    EB-13975   \n","3310   30-12-20    1298  CA-2017-115427  Standard Class    EB-13975   \n","3311   30-12-20    5092  CA-2017-156720  Standard Class    JM-15580   \n","\n","          Segment        Country           City       State  Postal Code  \\\n","0        Consumer  United States         Lorain        Ohio        44052   \n","1        Consumer  United States    Los Angeles  California        90036   \n","2     Home Office  United States       Franklin   Wisconsin        53132   \n","3        Consumer  United States     Huntsville       Texas        77340   \n","4        Consumer  United States     Huntsville       Texas        77340   \n","...           ...            ...            ...         ...          ...   \n","3307     Consumer  United States  New York City    New York        10009   \n","3308     Consumer  United States  New York City    New York        10009   \n","3309    Corporate  United States      Fairfield  California        94533   \n","3310    Corporate  United States      Fairfield  California        94533   \n","3311     Consumer  United States       Loveland    Colorado        80538   \n","\n","       Region       Product ID         Category Sub-Category  \\\n","0        East  FUR-FU-10003878        Furniture  Furnishings   \n","1        West  FUR-FU-10001215        Furniture  Furnishings   \n","2     Central  OFF-BI-10002012  Office Supplies      Binders   \n","3     Central  OFF-ST-10002743  Office Supplies      Storage   \n","4     Central  FUR-FU-10002116        Furniture  Furnishings   \n","...       ...              ...              ...          ...   \n","3307     East  TEC-PH-10004774       Technology       Phones   \n","3308     East  OFF-BI-10003684  Office Supplies      Binders   \n","3309     West  OFF-BI-10002103  Office Supplies      Binders   \n","3310     West  OFF-BI-10004632  Office Supplies      Binders   \n","3311     West  OFF-FA-10003472  Office Supplies    Fasteners   \n","\n","                                           Product Name    Sales  Quantity  \\\n","0                    Linden 10\" Round Wall Clock, Black   48.896         4   \n","1     Howard Miller 11-1/2\" Diameter Brentwood Wall ...  474.430        11   \n","2               Wilson Jones Easy Flow II Sheet Lifters    3.600         2   \n","3                         SAFCO Boltless Steel Shelving  454.560         5   \n","4     Tenex Carpeted, Granite-Look or Clear Contempo...  141.420         5   \n","...                                                 ...      ...       ...   \n","3307                          Gear Head AU3700S Headset   90.930         7   \n","3308               Wilson Jones Legal Size Ring Binders   52.776         3   \n","3309    Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl   13.904         2   \n","3310                                 GBC Binding covers   20.720         2   \n","3311                                Bagged Rubber Bands    3.024         3   \n","\n","      Discount    Profit  \n","0          0.2    8.5568  \n","1          0.0  199.2606  \n","2          0.0    1.7280  \n","3          0.2 -107.9580  \n","4          0.6 -187.3815  \n","...        ...       ...  \n","3307       0.0    2.7279  \n","3308       0.2   19.7910  \n","3309       0.2    4.5188  \n","3310       0.2    6.4750  \n","3311       0.2   -0.6048  \n","\n","[3312 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-4b0f09e9-5ba9-4924-b540-c284a54bf1d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Order Date</th>\n","      <th>Row ID</th>\n","      <th>Order ID</th>\n","      <th>Ship Mode</th>\n","      <th>Customer ID</th>\n","      <th>Segment</th>\n","      <th>Country</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Region</th>\n","      <th>Product ID</th>\n","      <th>Category</th>\n","      <th>Sub-Category</th>\n","      <th>Product Name</th>\n","      <th>Sales</th>\n","      <th>Quantity</th>\n","      <th>Discount</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01-01-20</td>\n","      <td>849</td>\n","      <td>CA-2017-107503</td>\n","      <td>Standard Class</td>\n","      <td>GA-14725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Lorain</td>\n","      <td>Ohio</td>\n","      <td>44052</td>\n","      <td>East</td>\n","      <td>FUR-FU-10003878</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Linden 10\" Round Wall Clock, Black</td>\n","      <td>48.896</td>\n","      <td>4</td>\n","      <td>0.2</td>\n","      <td>8.5568</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01-01-20</td>\n","      <td>4010</td>\n","      <td>CA-2017-144463</td>\n","      <td>Standard Class</td>\n","      <td>SC-20725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Los Angeles</td>\n","      <td>California</td>\n","      <td>90036</td>\n","      <td>West</td>\n","      <td>FUR-FU-10001215</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Howard Miller 11-1/2\" Diameter Brentwood Wall ...</td>\n","      <td>474.430</td>\n","      <td>11</td>\n","      <td>0.0</td>\n","      <td>199.2606</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-01-20</td>\n","      <td>6683</td>\n","      <td>CA-2017-154466</td>\n","      <td>First Class</td>\n","      <td>DP-13390</td>\n","      <td>Home Office</td>\n","      <td>United States</td>\n","      <td>Franklin</td>\n","      <td>Wisconsin</td>\n","      <td>53132</td>\n","      <td>Central</td>\n","      <td>OFF-BI-10002012</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Wilson Jones Easy Flow II Sheet Lifters</td>\n","      <td>3.600</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>1.7280</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01-01-20</td>\n","      <td>8070</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>OFF-ST-10002743</td>\n","      <td>Office Supplies</td>\n","      <td>Storage</td>\n","      <td>SAFCO Boltless Steel Shelving</td>\n","      <td>454.560</td>\n","      <td>5</td>\n","      <td>0.2</td>\n","      <td>-107.9580</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01-01-20</td>\n","      <td>8071</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>FUR-FU-10002116</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Tenex Carpeted, Granite-Look or Clear Contempo...</td>\n","      <td>141.420</td>\n","      <td>5</td>\n","      <td>0.6</td>\n","      <td>-187.3815</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3307</th>\n","      <td>30-12-20</td>\n","      <td>908</td>\n","      <td>CA-2017-143259</td>\n","      <td>Standard Class</td>\n","      <td>PO-18865</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>New York City</td>\n","      <td>New York</td>\n","      <td>10009</td>\n","      <td>East</td>\n","      <td>TEC-PH-10004774</td>\n","      <td>Technology</td>\n","      <td>Phones</td>\n","      <td>Gear Head AU3700S Headset</td>\n","      <td>90.930</td>\n","      <td>7</td>\n","      <td>0.0</td>\n","      <td>2.7279</td>\n","    </tr>\n","    <tr>\n","      <th>3308</th>\n","      <td>30-12-20</td>\n","      <td>909</td>\n","      <td>CA-2017-143259</td>\n","      <td>Standard Class</td>\n","      <td>PO-18865</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>New York City</td>\n","      <td>New York</td>\n","      <td>10009</td>\n","      <td>East</td>\n","      <td>OFF-BI-10003684</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Wilson Jones Legal Size Ring Binders</td>\n","      <td>52.776</td>\n","      <td>3</td>\n","      <td>0.2</td>\n","      <td>19.7910</td>\n","    </tr>\n","    <tr>\n","      <th>3309</th>\n","      <td>30-12-20</td>\n","      <td>1297</td>\n","      <td>CA-2017-115427</td>\n","      <td>Standard Class</td>\n","      <td>EB-13975</td>\n","      <td>Corporate</td>\n","      <td>United States</td>\n","      <td>Fairfield</td>\n","      <td>California</td>\n","      <td>94533</td>\n","      <td>West</td>\n","      <td>OFF-BI-10002103</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl</td>\n","      <td>13.904</td>\n","      <td>2</td>\n","      <td>0.2</td>\n","      <td>4.5188</td>\n","    </tr>\n","    <tr>\n","      <th>3310</th>\n","      <td>30-12-20</td>\n","      <td>1298</td>\n","      <td>CA-2017-115427</td>\n","      <td>Standard Class</td>\n","      <td>EB-13975</td>\n","      <td>Corporate</td>\n","      <td>United States</td>\n","      <td>Fairfield</td>\n","      <td>California</td>\n","      <td>94533</td>\n","      <td>West</td>\n","      <td>OFF-BI-10004632</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>GBC Binding covers</td>\n","      <td>20.720</td>\n","      <td>2</td>\n","      <td>0.2</td>\n","      <td>6.4750</td>\n","    </tr>\n","    <tr>\n","      <th>3311</th>\n","      <td>30-12-20</td>\n","      <td>5092</td>\n","      <td>CA-2017-156720</td>\n","      <td>Standard Class</td>\n","      <td>JM-15580</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Loveland</td>\n","      <td>Colorado</td>\n","      <td>80538</td>\n","      <td>West</td>\n","      <td>OFF-FA-10003472</td>\n","      <td>Office Supplies</td>\n","      <td>Fasteners</td>\n","      <td>Bagged Rubber Bands</td>\n","      <td>3.024</td>\n","      <td>3</td>\n","      <td>0.2</td>\n","      <td>-0.6048</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3312 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b0f09e9-5ba9-4924-b540-c284a54bf1d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b0f09e9-5ba9-4924-b540-c284a54bf1d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b0f09e9-5ba9-4924-b540-c284a54bf1d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc10d62a-8825-4dbd-a55d-c45e1f69a9b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc10d62a-8825-4dbd-a55d-c45e1f69a9b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc10d62a-8825-4dbd-a55d-c45e1f69a9b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0da8e936-6c78-473b-b8ff-dfb0cbf97913\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0da8e936-6c78-473b-b8ff-dfb0cbf97913 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3312,\n  \"fields\": [\n    {\n      \"column\": \"Order Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 322,\n        \"samples\": [\n          \"25-07-20\",\n          \"09-06-20\",\n          \"21-08-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Row ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2817,\n        \"min\": 13,\n        \"max\": 9994,\n        \"num_unique_values\": 3312,\n        \"samples\": [\n          9863,\n          5456,\n          8302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Order ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1687,\n        \"samples\": [\n          \"CA-2017-120222\",\n          \"CA-2017-122770\",\n          \"CA-2017-120719\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ship Mode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"First Class\",\n          \"Same Day\",\n          \"Standard Class\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 693,\n        \"samples\": [\n          \"FO-14305\",\n          \"NP-18325\",\n          \"JE-15745\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Consumer\",\n          \"Home Office\",\n          \"Corporate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 350,\n        \"samples\": [\n          \"Greensboro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 47,\n        \"samples\": [\n          \"Minnesota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31980,\n        \"min\": 1841,\n        \"max\": 99301,\n        \"num_unique_values\": 437,\n        \"samples\": [\n          21740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1525,\n        \"samples\": [\n          \"OFF-PA-10000380\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Furniture\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Furnishings\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1511,\n        \"samples\": [\n          \"Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\\\"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 585.2575312625233,\n        \"min\": 0.444,\n        \"max\": 13999.96,\n        \"num_unique_values\": 2552,\n        \"samples\": [\n          34.384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 14,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20742912132577707,\n        \"min\": 0.0,\n        \"max\": 0.8,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 241.86434160309102,\n        \"min\": -3839.9904,\n        \"max\": 6719.9808,\n        \"num_unique_values\": 2881,\n        \"samples\": [\n          149.8956\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":[],"metadata":{"id":"NtaZWmNbpoaE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(df)"],"metadata":{"id":"rWXUOyEzRfP8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Order Date'] = pd.to_datetime(df['Order Date'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":721},"id":"MT_sWx81Qe0h","executionInfo":{"status":"ok","timestamp":1719742866698,"user_tz":-420,"elapsed":439,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"a91d8c11-a1bb-48cf-cace-e6ab1af0334f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e419b3dd7a76>:1: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n","  df['Order Date'] = pd.to_datetime(df['Order Date'])\n"]},{"output_type":"execute_result","data":{"text/plain":["     Order Date  Row ID        Order ID       Ship Mode Customer ID  \\\n","0    2020-01-01     849  CA-2017-107503  Standard Class    GA-14725   \n","1    2020-01-01    4010  CA-2017-144463  Standard Class    SC-20725   \n","2    2020-01-01    6683  CA-2017-154466     First Class    DP-13390   \n","3    2020-01-01    8070  CA-2017-151750  Standard Class    JM-15250   \n","4    2020-01-01    8071  CA-2017-151750  Standard Class    JM-15250   \n","...         ...     ...             ...             ...         ...   \n","3307 2020-12-30     908  CA-2017-143259  Standard Class    PO-18865   \n","3308 2020-12-30     909  CA-2017-143259  Standard Class    PO-18865   \n","3309 2020-12-30    1297  CA-2017-115427  Standard Class    EB-13975   \n","3310 2020-12-30    1298  CA-2017-115427  Standard Class    EB-13975   \n","3311 2020-12-30    5092  CA-2017-156720  Standard Class    JM-15580   \n","\n","          Segment        Country           City       State  Postal Code  \\\n","0        Consumer  United States         Lorain        Ohio        44052   \n","1        Consumer  United States    Los Angeles  California        90036   \n","2     Home Office  United States       Franklin   Wisconsin        53132   \n","3        Consumer  United States     Huntsville       Texas        77340   \n","4        Consumer  United States     Huntsville       Texas        77340   \n","...           ...            ...            ...         ...          ...   \n","3307     Consumer  United States  New York City    New York        10009   \n","3308     Consumer  United States  New York City    New York        10009   \n","3309    Corporate  United States      Fairfield  California        94533   \n","3310    Corporate  United States      Fairfield  California        94533   \n","3311     Consumer  United States       Loveland    Colorado        80538   \n","\n","       Region       Product ID         Category Sub-Category  \\\n","0        East  FUR-FU-10003878        Furniture  Furnishings   \n","1        West  FUR-FU-10001215        Furniture  Furnishings   \n","2     Central  OFF-BI-10002012  Office Supplies      Binders   \n","3     Central  OFF-ST-10002743  Office Supplies      Storage   \n","4     Central  FUR-FU-10002116        Furniture  Furnishings   \n","...       ...              ...              ...          ...   \n","3307     East  TEC-PH-10004774       Technology       Phones   \n","3308     East  OFF-BI-10003684  Office Supplies      Binders   \n","3309     West  OFF-BI-10002103  Office Supplies      Binders   \n","3310     West  OFF-BI-10004632  Office Supplies      Binders   \n","3311     West  OFF-FA-10003472  Office Supplies    Fasteners   \n","\n","                                           Product Name    Sales  Quantity  \\\n","0                    Linden 10\" Round Wall Clock, Black   48.896         4   \n","1     Howard Miller 11-1/2\" Diameter Brentwood Wall ...  474.430        11   \n","2               Wilson Jones Easy Flow II Sheet Lifters    3.600         2   \n","3                         SAFCO Boltless Steel Shelving  454.560         5   \n","4     Tenex Carpeted, Granite-Look or Clear Contempo...  141.420         5   \n","...                                                 ...      ...       ...   \n","3307                          Gear Head AU3700S Headset   90.930         7   \n","3308               Wilson Jones Legal Size Ring Binders   52.776         3   \n","3309    Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl   13.904         2   \n","3310                                 GBC Binding covers   20.720         2   \n","3311                                Bagged Rubber Bands    3.024         3   \n","\n","      Discount    Profit  \n","0          0.2    8.5568  \n","1          0.0  199.2606  \n","2          0.0    1.7280  \n","3          0.2 -107.9580  \n","4          0.6 -187.3815  \n","...        ...       ...  \n","3307       0.0    2.7279  \n","3308       0.2   19.7910  \n","3309       0.2    4.5188  \n","3310       0.2    6.4750  \n","3311       0.2   -0.6048  \n","\n","[3312 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-d69f21fa-cb13-46b3-bf48-19fe0ee98d57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Order Date</th>\n","      <th>Row ID</th>\n","      <th>Order ID</th>\n","      <th>Ship Mode</th>\n","      <th>Customer ID</th>\n","      <th>Segment</th>\n","      <th>Country</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Region</th>\n","      <th>Product ID</th>\n","      <th>Category</th>\n","      <th>Sub-Category</th>\n","      <th>Product Name</th>\n","      <th>Sales</th>\n","      <th>Quantity</th>\n","      <th>Discount</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>849</td>\n","      <td>CA-2017-107503</td>\n","      <td>Standard Class</td>\n","      <td>GA-14725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Lorain</td>\n","      <td>Ohio</td>\n","      <td>44052</td>\n","      <td>East</td>\n","      <td>FUR-FU-10003878</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Linden 10\" Round Wall Clock, Black</td>\n","      <td>48.896</td>\n","      <td>4</td>\n","      <td>0.2</td>\n","      <td>8.5568</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-01</td>\n","      <td>4010</td>\n","      <td>CA-2017-144463</td>\n","      <td>Standard Class</td>\n","      <td>SC-20725</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Los Angeles</td>\n","      <td>California</td>\n","      <td>90036</td>\n","      <td>West</td>\n","      <td>FUR-FU-10001215</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Howard Miller 11-1/2\" Diameter Brentwood Wall ...</td>\n","      <td>474.430</td>\n","      <td>11</td>\n","      <td>0.0</td>\n","      <td>199.2606</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-01</td>\n","      <td>6683</td>\n","      <td>CA-2017-154466</td>\n","      <td>First Class</td>\n","      <td>DP-13390</td>\n","      <td>Home Office</td>\n","      <td>United States</td>\n","      <td>Franklin</td>\n","      <td>Wisconsin</td>\n","      <td>53132</td>\n","      <td>Central</td>\n","      <td>OFF-BI-10002012</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Wilson Jones Easy Flow II Sheet Lifters</td>\n","      <td>3.600</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>1.7280</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-01</td>\n","      <td>8070</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>OFF-ST-10002743</td>\n","      <td>Office Supplies</td>\n","      <td>Storage</td>\n","      <td>SAFCO Boltless Steel Shelving</td>\n","      <td>454.560</td>\n","      <td>5</td>\n","      <td>0.2</td>\n","      <td>-107.9580</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-01</td>\n","      <td>8071</td>\n","      <td>CA-2017-151750</td>\n","      <td>Standard Class</td>\n","      <td>JM-15250</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Huntsville</td>\n","      <td>Texas</td>\n","      <td>77340</td>\n","      <td>Central</td>\n","      <td>FUR-FU-10002116</td>\n","      <td>Furniture</td>\n","      <td>Furnishings</td>\n","      <td>Tenex Carpeted, Granite-Look or Clear Contempo...</td>\n","      <td>141.420</td>\n","      <td>5</td>\n","      <td>0.6</td>\n","      <td>-187.3815</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3307</th>\n","      <td>2020-12-30</td>\n","      <td>908</td>\n","      <td>CA-2017-143259</td>\n","      <td>Standard Class</td>\n","      <td>PO-18865</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>New York City</td>\n","      <td>New York</td>\n","      <td>10009</td>\n","      <td>East</td>\n","      <td>TEC-PH-10004774</td>\n","      <td>Technology</td>\n","      <td>Phones</td>\n","      <td>Gear Head AU3700S Headset</td>\n","      <td>90.930</td>\n","      <td>7</td>\n","      <td>0.0</td>\n","      <td>2.7279</td>\n","    </tr>\n","    <tr>\n","      <th>3308</th>\n","      <td>2020-12-30</td>\n","      <td>909</td>\n","      <td>CA-2017-143259</td>\n","      <td>Standard Class</td>\n","      <td>PO-18865</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>New York City</td>\n","      <td>New York</td>\n","      <td>10009</td>\n","      <td>East</td>\n","      <td>OFF-BI-10003684</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Wilson Jones Legal Size Ring Binders</td>\n","      <td>52.776</td>\n","      <td>3</td>\n","      <td>0.2</td>\n","      <td>19.7910</td>\n","    </tr>\n","    <tr>\n","      <th>3309</th>\n","      <td>2020-12-30</td>\n","      <td>1297</td>\n","      <td>CA-2017-115427</td>\n","      <td>Standard Class</td>\n","      <td>EB-13975</td>\n","      <td>Corporate</td>\n","      <td>United States</td>\n","      <td>Fairfield</td>\n","      <td>California</td>\n","      <td>94533</td>\n","      <td>West</td>\n","      <td>OFF-BI-10002103</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl</td>\n","      <td>13.904</td>\n","      <td>2</td>\n","      <td>0.2</td>\n","      <td>4.5188</td>\n","    </tr>\n","    <tr>\n","      <th>3310</th>\n","      <td>2020-12-30</td>\n","      <td>1298</td>\n","      <td>CA-2017-115427</td>\n","      <td>Standard Class</td>\n","      <td>EB-13975</td>\n","      <td>Corporate</td>\n","      <td>United States</td>\n","      <td>Fairfield</td>\n","      <td>California</td>\n","      <td>94533</td>\n","      <td>West</td>\n","      <td>OFF-BI-10004632</td>\n","      <td>Office Supplies</td>\n","      <td>Binders</td>\n","      <td>GBC Binding covers</td>\n","      <td>20.720</td>\n","      <td>2</td>\n","      <td>0.2</td>\n","      <td>6.4750</td>\n","    </tr>\n","    <tr>\n","      <th>3311</th>\n","      <td>2020-12-30</td>\n","      <td>5092</td>\n","      <td>CA-2017-156720</td>\n","      <td>Standard Class</td>\n","      <td>JM-15580</td>\n","      <td>Consumer</td>\n","      <td>United States</td>\n","      <td>Loveland</td>\n","      <td>Colorado</td>\n","      <td>80538</td>\n","      <td>West</td>\n","      <td>OFF-FA-10003472</td>\n","      <td>Office Supplies</td>\n","      <td>Fasteners</td>\n","      <td>Bagged Rubber Bands</td>\n","      <td>3.024</td>\n","      <td>3</td>\n","      <td>0.2</td>\n","      <td>-0.6048</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3312 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d69f21fa-cb13-46b3-bf48-19fe0ee98d57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d69f21fa-cb13-46b3-bf48-19fe0ee98d57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d69f21fa-cb13-46b3-bf48-19fe0ee98d57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5650cd6d-9357-413b-912e-48bd96337d24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5650cd6d-9357-413b-912e-48bd96337d24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5650cd6d-9357-413b-912e-48bd96337d24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e730267a-458f-4df3-b7db-99a7bf47edf3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e730267a-458f-4df3-b7db-99a7bf47edf3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3312,\n  \"fields\": [\n    {\n      \"column\": \"Order Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-01-01 00:00:00\",\n        \"max\": \"2020-12-30 00:00:00\",\n        \"num_unique_values\": 322,\n        \"samples\": [\n          \"2020-07-25 00:00:00\",\n          \"2020-09-06 00:00:00\",\n          \"2020-08-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Row ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2817,\n        \"min\": 13,\n        \"max\": 9994,\n        \"num_unique_values\": 3312,\n        \"samples\": [\n          9863,\n          5456,\n          8302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Order ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1687,\n        \"samples\": [\n          \"CA-2017-120222\",\n          \"CA-2017-122770\",\n          \"CA-2017-120719\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ship Mode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"First Class\",\n          \"Same Day\",\n          \"Standard Class\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 693,\n        \"samples\": [\n          \"FO-14305\",\n          \"NP-18325\",\n          \"JE-15745\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Consumer\",\n          \"Home Office\",\n          \"Corporate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 350,\n        \"samples\": [\n          \"Greensboro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 47,\n        \"samples\": [\n          \"Minnesota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31980,\n        \"min\": 1841,\n        \"max\": 99301,\n        \"num_unique_values\": 437,\n        \"samples\": [\n          21740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1525,\n        \"samples\": [\n          \"OFF-PA-10000380\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Furniture\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Furnishings\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1511,\n        \"samples\": [\n          \"Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\\\"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 585.2575312625233,\n        \"min\": 0.444,\n        \"max\": 13999.96,\n        \"num_unique_values\": 2552,\n        \"samples\": [\n          34.384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 14,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20742912132577707,\n        \"min\": 0.0,\n        \"max\": 0.8,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 241.86434160309102,\n        \"min\": -3839.9904,\n        \"max\": 6719.9808,\n        \"num_unique_values\": 2881,\n        \"samples\": [\n          149.8956\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['Order Date'] = pd.to_datetime(df['Order Date'])\n","\n","print('Min date: {} \\nMax date: {}'.format(df['Order Date'].min(), df['Order Date'].max()))\n","print('Time difference is: {}'.format(df['Order Date'].max() - df['Order Date'].min()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iDhIjmrVppGX","executionInfo":{"status":"ok","timestamp":1707993105748,"user_tz":-420,"elapsed":313,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"b53593ff-5275-45e4-a1d9-2fba3e4feb5c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Min date: 2020-01-01 00:00:00 \n","Max date: 2020-12-30 00:00:00\n","Time difference is: 364 days 00:00:00\n"]}]},{"cell_type":"code","source":["con = duckdb.connect()\n","con.register('df_table', df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UV0LG2a3YQmX","executionInfo":{"status":"ok","timestamp":1719742874425,"user_tz":-420,"elapsed":408,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"e73fb809-ae0b-48c6-9e0e-a173695309a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<duckdb.duckdb.DuckDBPyConnection at 0x7dfc7aefc430>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["con = duckdb.connect()\n","con.register('df_table', df)\n","result = con.execute(\"\"\"\n","SELECT\n","    min(\"Order Date\") as min_date,\n","    max(\"Order Date\") as max_date\n","    ,max_date - min_date as time_difference\n","FROM df_table\n","\"\"\").fetchdf()\n","\n","# Tính toán sự khác biệt thời gian\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g7mJMLu9TxEf","executionInfo":{"status":"ok","timestamp":1719742877952,"user_tz":-420,"elapsed":4,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"2ccc459f-e29d-4edf-93b3-034f8e545e1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    min_date   max_date time_difference\n","0 2020-01-01 2020-12-30        364 days\n"]}]},{"cell_type":"code","source":["con.execute(\"\"\"\n","SELECT\n","    min(\"Order Date\") as min_date,\n","    max(\"Order Date\") as max_date\n","    ,max_date - min_date as time_difference\n","FROM df_table\n","\"\"\").fetchdf()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"2Of3_iVHVHL_","executionInfo":{"status":"ok","timestamp":1719742880783,"user_tz":-420,"elapsed":423,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"4626a9bc-f16a-4440-c408-bfbc1b69d69c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    min_date   max_date time_difference\n","0 2020-01-01 2020-12-30        364 days"],"text/html":["\n","  <div id=\"df-24e37293-c7f3-4df1-8600-1d2e78816b63\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>min_date</th>\n","      <th>max_date</th>\n","      <th>time_difference</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>2020-12-30</td>\n","      <td>364 days</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24e37293-c7f3-4df1-8600-1d2e78816b63')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24e37293-c7f3-4df1-8600-1d2e78816b63 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24e37293-c7f3-4df1-8600-1d2e78816b63');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"\\\"\\\"\\\")\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"min_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-01-01 00:00:00\",\n        \"max\": \"2020-01-01 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2020-01-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-12-30 00:00:00\",\n        \"max\": \"2020-12-30 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2020-12-30 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_difference\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"364 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["cohort = con.execute(\"\"\"\n","with first_month as(\n","SELECT\n","    \"Customer ID\",\n","    min(\"Order Date\") as First_Trans_Month\n","FROM df_table\n","group by \"Customer ID\"),\n","data1 as (select a.\"Customer ID\"\n",",  DATE_PART('year', \"Order Date\") || '-' || DATE_PART('month', \"Order Date\") || '-' || 01 AS \" Trans Month\"\n",", DATE_PART('year', b.First_Trans_Month) || '-' || DATE_PART('month', b.First_Trans_Month) || '-' || 01 AS \"First_Trans_Month\"\n",", date_part('month', a.\"Order Date\") - date_part('month', b.First_Trans_Month) as Month_Diff\n","from df_table a\n","left join first_month b\n","on a.\"Customer ID\" = b.\"Customer ID\")\n","select First_Trans_Month, Month_Diff, count(distinct \"Customer ID\") as No_Cus\n","from data1\n","group by First_Trans_Month, Month_Diff\n","order by First_Trans_Month\n","\"\"\").fetchdf()\n","cohort"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"cnpGPx-UVuw3","executionInfo":{"status":"ok","timestamp":1719742883652,"user_tz":-420,"elapsed":422,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"ae7cf9d5-d2fd-48b2-f71d-539a3e264cd9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   First_Trans_Month  Month_Diff  No_Cus\n","0           2020-1-1           7      19\n","1           2020-1-1           4       7\n","2           2020-1-1           0      96\n","3           2020-1-1           3      23\n","4           2020-1-1           5      13\n","..               ...         ...     ...\n","73          2020-8-1           1       5\n","74          2020-9-1           1       9\n","75          2020-9-1           2      15\n","76          2020-9-1           0      48\n","77          2020-9-1           3      12\n","\n","[78 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-82f73e27-f0b5-4601-a3ec-5e5c1f0b6782\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>First_Trans_Month</th>\n","      <th>Month_Diff</th>\n","      <th>No_Cus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-1-1</td>\n","      <td>7</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-1-1</td>\n","      <td>4</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-1-1</td>\n","      <td>0</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-1-1</td>\n","      <td>3</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-1-1</td>\n","      <td>5</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>2020-8-1</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>2020-9-1</td>\n","      <td>1</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>2020-9-1</td>\n","      <td>2</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2020-9-1</td>\n","      <td>0</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>2020-9-1</td>\n","      <td>3</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>78 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82f73e27-f0b5-4601-a3ec-5e5c1f0b6782')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-82f73e27-f0b5-4601-a3ec-5e5c1f0b6782 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-82f73e27-f0b5-4601-a3ec-5e5c1f0b6782');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1abcca6e-eafc-4036-b64e-59ab4f08f8a5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1abcca6e-eafc-4036-b64e-59ab4f08f8a5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1abcca6e-eafc-4036-b64e-59ab4f08f8a5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_578a38c7-07e9-400f-b33b-7c420b7431e0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cohort')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_578a38c7-07e9-400f-b33b-7c420b7431e0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cohort');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cohort","summary":"{\n  \"name\": \"cohort\",\n  \"rows\": 78,\n  \"fields\": [\n    {\n      \"column\": \"First_Trans_Month\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"2020-8-1\",\n          \"2020-7-1\",\n          \"2020-1-1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month_Diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 11,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          8,\n          1,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"No_Cus\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 4,\n        \"max\": 111,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          56,\n          15,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["cohort['First_Trans_Month'] = pd.to_datetime(cohort['First_Trans_Month'])"],"metadata":{"id":"9vusfRzbcJYF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cohort.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FGVQbnAPb5rL","executionInfo":{"status":"ok","timestamp":1719742889953,"user_tz":-420,"elapsed":4,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"f2f6579d-cb49-4916-dfd4-0b0141d89dc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 78 entries, 0 to 77\n","Data columns (total 3 columns):\n"," #   Column             Non-Null Count  Dtype         \n","---  ------             --------------  -----         \n"," 0   First_Trans_Month  78 non-null     datetime64[ns]\n"," 1   Month_Diff         78 non-null     int64         \n"," 2   No_Cus             78 non-null     int64         \n","dtypes: datetime64[ns](1), int64(2)\n","memory usage: 2.0 KB\n"]}]},{"cell_type":"code","source":["pivot_df = cohort.pivot(index='First_Trans_Month', columns='Month_Diff', values='No_Cus').sort_index()\n","pivot_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":456},"id":"MCa3JusHaF2e","executionInfo":{"status":"ok","timestamp":1719742891618,"user_tz":-420,"elapsed":4,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"22fe2150-2846-4add-cb93-8507501d69c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Month_Diff            0     1     2     3     4     5     6     7     8   \\\n","First_Trans_Month                                                          \n","2020-01-01          96.0  10.0  18.0  23.0   7.0  13.0  11.0  19.0  22.0   \n","2020-02-01          90.0  13.0  13.0   8.0  11.0  15.0  15.0  18.0  15.0   \n","2020-03-01         111.0  24.0  13.0  17.0  18.0  10.0  22.0  17.0  26.0   \n","2020-04-01          65.0  14.0  14.0  11.0  12.0  19.0  11.0  18.0  14.0   \n","2020-05-01          63.0   9.0   7.0  10.0  10.0   9.0  19.0  13.0   NaN   \n","2020-06-01          56.0   6.0  12.0  13.0  10.0  12.0  11.0   NaN   NaN   \n","2020-07-01          42.0   9.0   9.0   4.0   7.0   5.0   NaN   NaN   NaN   \n","2020-08-01          29.0   5.0   6.0   5.0   7.0   NaN   NaN   NaN   NaN   \n","2020-09-01          48.0   9.0  15.0  12.0   NaN   NaN   NaN   NaN   NaN   \n","2020-10-01          41.0  10.0   4.0   NaN   NaN   NaN   NaN   NaN   NaN   \n","2020-11-01          29.0   5.0   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n","2020-12-01          23.0   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n","\n","Month_Diff           9     10    11  \n","First_Trans_Month                    \n","2020-01-01         13.0  17.0  19.0  \n","2020-02-01         23.0  15.0   NaN  \n","2020-03-01         20.0   NaN   NaN  \n","2020-04-01          NaN   NaN   NaN  \n","2020-05-01          NaN   NaN   NaN  \n","2020-06-01          NaN   NaN   NaN  \n","2020-07-01          NaN   NaN   NaN  \n","2020-08-01          NaN   NaN   NaN  \n","2020-09-01          NaN   NaN   NaN  \n","2020-10-01          NaN   NaN   NaN  \n","2020-11-01          NaN   NaN   NaN  \n","2020-12-01          NaN   NaN   NaN  "],"text/html":["\n","  <div id=\"df-4fec2598-9c79-4a59-9f38-35f335390761\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Month_Diff</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","    </tr>\n","    <tr>\n","      <th>First_Trans_Month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-01</th>\n","      <td>96.0</td>\n","      <td>10.0</td>\n","      <td>18.0</td>\n","      <td>23.0</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","      <td>11.0</td>\n","      <td>19.0</td>\n","      <td>22.0</td>\n","      <td>13.0</td>\n","      <td>17.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>90.0</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>8.0</td>\n","      <td>11.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","      <td>23.0</td>\n","      <td>15.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>111.0</td>\n","      <td>24.0</td>\n","      <td>13.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","      <td>10.0</td>\n","      <td>22.0</td>\n","      <td>17.0</td>\n","      <td>26.0</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-01</th>\n","      <td>65.0</td>\n","      <td>14.0</td>\n","      <td>14.0</td>\n","      <td>11.0</td>\n","      <td>12.0</td>\n","      <td>19.0</td>\n","      <td>11.0</td>\n","      <td>18.0</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-05-01</th>\n","      <td>63.0</td>\n","      <td>9.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>19.0</td>\n","      <td>13.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-01</th>\n","      <td>56.0</td>\n","      <td>6.0</td>\n","      <td>12.0</td>\n","      <td>13.0</td>\n","      <td>10.0</td>\n","      <td>12.0</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>42.0</td>\n","      <td>9.0</td>\n","      <td>9.0</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-08-01</th>\n","      <td>29.0</td>\n","      <td>5.0</td>\n","      <td>6.0</td>\n","      <td>5.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-01</th>\n","      <td>48.0</td>\n","      <td>9.0</td>\n","      <td>15.0</td>\n","      <td>12.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01</th>\n","      <td>41.0</td>\n","      <td>10.0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-11-01</th>\n","      <td>29.0</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-12-01</th>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fec2598-9c79-4a59-9f38-35f335390761')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fec2598-9c79-4a59-9f38-35f335390761 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fec2598-9c79-4a59-9f38-35f335390761');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4a0ce88c-cfa7-4ac5-9a93-f98b6e084ed6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a0ce88c-cfa7-4ac5-9a93-f98b6e084ed6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4a0ce88c-cfa7-4ac5-9a93-f98b6e084ed6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_082e7e77-921a-4258-aa3a-9e5752e16c83\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('pivot_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_082e7e77-921a-4258-aa3a-9e5752e16c83 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('pivot_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"pivot_df","summary":"{\n  \"name\": \"pivot_df\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"First_Trans_Month\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-01-01 00:00:00\",\n        \"max\": \"2020-12-01 00:00:00\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"2020-11-01 00:00:00\",\n          \"2020-10-01 00:00:00\",\n          \"2020-01-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.454509148974804,\n        \"min\": 23.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          56.0,\n          96.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.3716427147145085,\n        \"min\": 5.0,\n        \"max\": 24.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          13.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.433458644845529,\n        \"min\": 4.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          15.0,\n          13.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.897268670984711,\n        \"min\": 4.0,\n        \"max\": 23.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          5.0,\n          8.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.693623849670827,\n        \"min\": 7.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          11.0,\n          10.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.488079449258573,\n        \"min\": 5.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          13.0,\n          15.0,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.750438576243952,\n        \"min\": 11.0,\n        \"max\": 22.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          15.0,\n          19.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.345207879911715,\n        \"min\": 13.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          18.0,\n          13.0,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.737304826019502,\n        \"min\": 14.0,\n        \"max\": 26.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          15.0,\n          14.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.131601439446884,\n        \"min\": 13.0,\n        \"max\": 23.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          13.0,\n          23.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4142135623730951,\n        \"min\": 15.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          15.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 19.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["final_data = con.execute(\"\"\"\n","with pre_cohort as(\n","  select First_Trans_Month, No_Cus as New_Cus\n","from cohort\n","where Month_Diff = 0\n","order by First_Trans_Month)\n","select a.First_Trans_Month, a.Month_Diff,a.No_Cus, b.New_Cus\n","from cohort a\n","left join pre_cohort b\n","on a.First_Trans_Month = b.First_Trans_Month\n","order by a.First_Trans_Month,a.Month_Diff\n","\"\"\").fetchdf()\n","final_data\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Vt-t6emhq-Ds","executionInfo":{"status":"ok","timestamp":1719744364295,"user_tz":-420,"elapsed":406,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"5462958d-fd48-4a79-fabe-205c5a2646e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   First_Trans_Month  Month_Diff  No_Cus  New_Cus\n","0         2020-01-01           0      96       96\n","1         2020-01-01           1      10       96\n","2         2020-01-01           2      18       96\n","3         2020-01-01           3      23       96\n","4         2020-01-01           4       7       96\n","..               ...         ...     ...      ...\n","73        2020-10-01           1      10       41\n","74        2020-10-01           2       4       41\n","75        2020-11-01           0      29       29\n","76        2020-11-01           1       5       29\n","77        2020-12-01           0      23       23\n","\n","[78 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-40dc8b68-ae0f-4a53-8c49-04c15cd95a10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>First_Trans_Month</th>\n","      <th>Month_Diff</th>\n","      <th>No_Cus</th>\n","      <th>New_Cus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>0</td>\n","      <td>96</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-01</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-01</td>\n","      <td>2</td>\n","      <td>18</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-01</td>\n","      <td>3</td>\n","      <td>23</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-01</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>2020-10-01</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>2020-10-01</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>2020-11-01</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2020-11-01</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>2020-12-01</td>\n","      <td>0</td>\n","      <td>23</td>\n","      <td>23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>78 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40dc8b68-ae0f-4a53-8c49-04c15cd95a10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40dc8b68-ae0f-4a53-8c49-04c15cd95a10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40dc8b68-ae0f-4a53-8c49-04c15cd95a10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8cc328a2-d85d-4af9-a7ef-21ffc5819176\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8cc328a2-d85d-4af9-a7ef-21ffc5819176')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8cc328a2-d85d-4af9-a7ef-21ffc5819176 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_da84efea-7985-4e76-a79d-0317d6d4f434\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_da84efea-7985-4e76-a79d-0317d6d4f434 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_data","summary":"{\n  \"name\": \"final_data\",\n  \"rows\": 78,\n  \"fields\": [\n    {\n      \"column\": \"First_Trans_Month\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-01-01 00:00:00\",\n        \"max\": \"2020-12-01 00:00:00\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"2020-11-01 00:00:00\",\n          \"2020-10-01 00:00:00\",\n          \"2020-01-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month_Diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 11,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          10,\n          9,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"No_Cus\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 4,\n        \"max\": 111,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          29,\n          26,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New_Cus\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 23,\n        \"max\": 111,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          56,\n          96,\n          41\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df_cohort = con.execute(\"\"\"\n","select First_Trans_Month, Month_Diff,No_Cus, New_Cus, (No_Cus/New_Cus) as Retention_Rate\n","from final_data\n","\"\"\").fetchdf()\n"],"metadata":{"id":"zMAmnSuCvIib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["COHORT = df_cohort.pivot(index='First_Trans_Month', columns='Month_Diff', values='Retention_Rate')\n","\n","COHORT.index = COHORT.index.strftime(\"%Y-%m\")\n","\n","COHORT"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":456},"id":"1tBpz9sswcfV","executionInfo":{"status":"ok","timestamp":1719744565362,"user_tz":-420,"elapsed":442,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"5e1c67d3-e0b5-41d2-f7de-a81cca4eea37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Month_Diff          0         1         2         3         4         5   \\\n","First_Trans_Month                                                          \n","2020-01            1.0  0.104167  0.187500  0.239583  0.072917  0.135417   \n","2020-02            1.0  0.144444  0.144444  0.088889  0.122222  0.166667   \n","2020-03            1.0  0.216216  0.117117  0.153153  0.162162  0.090090   \n","2020-04            1.0  0.215385  0.215385  0.169231  0.184615  0.292308   \n","2020-05            1.0  0.142857  0.111111  0.158730  0.158730  0.142857   \n","2020-06            1.0  0.107143  0.214286  0.232143  0.178571  0.214286   \n","2020-07            1.0  0.214286  0.214286  0.095238  0.166667  0.119048   \n","2020-08            1.0  0.172414  0.206897  0.172414  0.241379       NaN   \n","2020-09            1.0  0.187500  0.312500  0.250000       NaN       NaN   \n","2020-10            1.0  0.243902  0.097561       NaN       NaN       NaN   \n","2020-11            1.0  0.172414       NaN       NaN       NaN       NaN   \n","2020-12            1.0       NaN       NaN       NaN       NaN       NaN   \n","\n","Month_Diff               6         7         8         9         10        11  \n","First_Trans_Month                                                              \n","2020-01            0.114583  0.197917  0.229167  0.135417  0.177083  0.197917  \n","2020-02            0.166667  0.200000  0.166667  0.255556  0.166667       NaN  \n","2020-03            0.198198  0.153153  0.234234  0.180180       NaN       NaN  \n","2020-04            0.169231  0.276923  0.215385       NaN       NaN       NaN  \n","2020-05            0.301587  0.206349       NaN       NaN       NaN       NaN  \n","2020-06            0.196429       NaN       NaN       NaN       NaN       NaN  \n","2020-07                 NaN       NaN       NaN       NaN       NaN       NaN  \n","2020-08                 NaN       NaN       NaN       NaN       NaN       NaN  \n","2020-09                 NaN       NaN       NaN       NaN       NaN       NaN  \n","2020-10                 NaN       NaN       NaN       NaN       NaN       NaN  \n","2020-11                 NaN       NaN       NaN       NaN       NaN       NaN  \n","2020-12                 NaN       NaN       NaN       NaN       NaN       NaN  "],"text/html":["\n","  <div id=\"df-29a63389-0c98-48e9-a7f2-9e79415befdf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Month_Diff</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","    </tr>\n","    <tr>\n","      <th>First_Trans_Month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01</th>\n","      <td>1.0</td>\n","      <td>0.104167</td>\n","      <td>0.187500</td>\n","      <td>0.239583</td>\n","      <td>0.072917</td>\n","      <td>0.135417</td>\n","      <td>0.114583</td>\n","      <td>0.197917</td>\n","      <td>0.229167</td>\n","      <td>0.135417</td>\n","      <td>0.177083</td>\n","      <td>0.197917</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02</th>\n","      <td>1.0</td>\n","      <td>0.144444</td>\n","      <td>0.144444</td>\n","      <td>0.088889</td>\n","      <td>0.122222</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.200000</td>\n","      <td>0.166667</td>\n","      <td>0.255556</td>\n","      <td>0.166667</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03</th>\n","      <td>1.0</td>\n","      <td>0.216216</td>\n","      <td>0.117117</td>\n","      <td>0.153153</td>\n","      <td>0.162162</td>\n","      <td>0.090090</td>\n","      <td>0.198198</td>\n","      <td>0.153153</td>\n","      <td>0.234234</td>\n","      <td>0.180180</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04</th>\n","      <td>1.0</td>\n","      <td>0.215385</td>\n","      <td>0.215385</td>\n","      <td>0.169231</td>\n","      <td>0.184615</td>\n","      <td>0.292308</td>\n","      <td>0.169231</td>\n","      <td>0.276923</td>\n","      <td>0.215385</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-05</th>\n","      <td>1.0</td>\n","      <td>0.142857</td>\n","      <td>0.111111</td>\n","      <td>0.158730</td>\n","      <td>0.158730</td>\n","      <td>0.142857</td>\n","      <td>0.301587</td>\n","      <td>0.206349</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06</th>\n","      <td>1.0</td>\n","      <td>0.107143</td>\n","      <td>0.214286</td>\n","      <td>0.232143</td>\n","      <td>0.178571</td>\n","      <td>0.214286</td>\n","      <td>0.196429</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07</th>\n","      <td>1.0</td>\n","      <td>0.214286</td>\n","      <td>0.214286</td>\n","      <td>0.095238</td>\n","      <td>0.166667</td>\n","      <td>0.119048</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-08</th>\n","      <td>1.0</td>\n","      <td>0.172414</td>\n","      <td>0.206897</td>\n","      <td>0.172414</td>\n","      <td>0.241379</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09</th>\n","      <td>1.0</td>\n","      <td>0.187500</td>\n","      <td>0.312500</td>\n","      <td>0.250000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10</th>\n","      <td>1.0</td>\n","      <td>0.243902</td>\n","      <td>0.097561</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-11</th>\n","      <td>1.0</td>\n","      <td>0.172414</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-12</th>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29a63389-0c98-48e9-a7f2-9e79415befdf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-29a63389-0c98-48e9-a7f2-9e79415befdf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-29a63389-0c98-48e9-a7f2-9e79415befdf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2464647d-1b1d-4aff-8551-4c624f036092\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2464647d-1b1d-4aff-8551-4c624f036092')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2464647d-1b1d-4aff-8551-4c624f036092 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c4eeb8ad-43c0-4afa-a650-24101b0dd11b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('COHORT')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c4eeb8ad-43c0-4afa-a650-24101b0dd11b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('COHORT');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"COHORT","summary":"{\n  \"name\": \"COHORT\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"First_Trans_Month\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"2020-11\",\n          \"2020-10\",\n          \"2020-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04623562790077878,\n        \"min\": 0.10416666666666667,\n        \"max\": 0.24390243902439024,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.1875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06553614709589413,\n        \"min\": 0.0975609756097561,\n        \"max\": 0.3125,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.3125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05872952534658327,\n        \"min\": 0.08888888888888889,\n        \"max\": 0.25,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.1724137931034483\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04873867763603604,\n        \"min\": 0.07291666666666667,\n        \"max\": 0.2413793103448276,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.12222222222222222\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06797439260894447,\n        \"min\": 0.09009009009009009,\n        \"max\": 0.2923076923076923,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.13541666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06199398634391681,\n        \"min\": 0.11458333333333333,\n        \"max\": 0.30158730158730157,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.11458333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.044498773895722085,\n        \"min\": 0.15315315315315314,\n        \"max\": 0.27692307692307694,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.030843689283832642,\n        \"min\": 0.16666666666666666,\n        \"max\": 0.23423423423423423,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.16666666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.060715967118090165,\n        \"min\": 0.13541666666666666,\n        \"max\": 0.25555555555555554,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.13541666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.007365695637359883,\n        \"min\": 0.16666666666666666,\n        \"max\": 0.17708333333333334,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.16666666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.19791666666666666,\n        \"max\": 0.19791666666666666,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.19791666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["plt.rcParams['axes.facecolor'] = 'white'\n","fig, ax = plt.subplots(figsize = (15, 8))\n","\n","sns.heatmap(COHORT, cmap='Blues', annot=True, fmt='.2%', annot_kws={'fontsize': 12}, cbar=False, ax=ax)\n","\n","plt.title('Retention Rate - Monthly Cohorts', fontsize=15)\n","plt.yticks(rotation = 0)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":720},"id":"f1S0J4HJxJlf","executionInfo":{"status":"ok","timestamp":1719744914964,"user_tz":-420,"elapsed":1649,"user":{"displayName":"Vy Huỳnh","userId":"16220427984493102554"}},"outputId":"b05df577-65aa-4400-af6c-b67cec0df969"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}